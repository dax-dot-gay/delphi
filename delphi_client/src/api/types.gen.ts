// This file is auto-generated by @hey-api/openapi-ts

export type ApiStatus = {
    session: Session;
    user?: UserProfile | null;
    time: string;
};

export type Session = {
    user_id?: string | null;
    _docid?: string;
    created?: string;
    last_access?: string;
};

export type UserProfile = {
    username: string;
    is_admin: boolean;
};

export type InternalServerError = {
    code: 'internal';
    reason: string;
};

export type MethodNotAllowed = {
    code: 'logged_in';
    id: string;
};

export type NotFound = {
    code: 'invalid_login';
    user: string;
};

export type Unauthorized = {
    code: 'expects_authenticated';
    path: string;
};

export type LoginModel = {
    username: string;
    password: string;
};

export type GetStatusData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type GetStatusResponses = {
    200: ApiStatus;
};

export type GetStatusResponse = GetStatusResponses[keyof GetStatusResponses];

export type LogoutData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/login';
};

export type LogoutErrors = {
    /**
     * # 401 Unauthorized
     */
    401: Unauthorized;
    /**
     * # 404 Not Found
     */
    404: NotFound;
    /**
     * # 405 Method Not Allowed
     */
    405: MethodNotAllowed;
    /**
     * # 500 Internal Server Error
     */
    500: InternalServerError;
};

export type LogoutError = LogoutErrors[keyof LogoutErrors];

export type LogoutResponses = {
    200: unknown;
};

export type LoginData = {
    body: LoginModel;
    path?: never;
    query?: never;
    url: '/login';
};

export type LoginErrors = {
    /**
     * # 401 Unauthorized
     */
    401: Unauthorized;
    /**
     * # 404 Not Found
     */
    404: NotFound;
    /**
     * # 405 Method Not Allowed
     */
    405: MethodNotAllowed;
    /**
     * # 500 Internal Server Error
     */
    500: InternalServerError;
};

export type LoginError = LoginErrors[keyof LoginErrors];

export type LoginResponses = {
    200: UserProfile;
};

export type LoginResponse = LoginResponses[keyof LoginResponses];

export type ClientOptions = {
    baseURL: `${string}://${string}` | (string & {});
};