{
    // Place your delphi workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    // 	"scope": "javascript,typescript",
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "Create Model": {
        "scope": "rust",
        "prefix": "mdl",
        "body": [
            "#[derive(Clone, Debug, serde::Serialize, serde::Deserialize, oximod::Model, schemars::JsonSchema)]",
            "#[serde_with::serde_as]",
            "#[db(\"delphi\")]",
            "#[collection(\"$1\")]",
            "pub struct $2 {",
            "    #[serde(skip_serializing_if = \"Option::is_none\", default = \"crate::util::default_oid\")]",
            "    #[schemars(with = \"String\")]",
            "    #[serde_as(as = \"serde_with::DisplayFromStr\")]",
            "    pub _id: Option<bson::oid::ObjectId>,",
			"    ",
			"    $0",
            "}"
        ]
    }
}
